<!DOCTYPE html>
<html lang="pt-BR">


<link rel="canonical" href="https://getbootstrap.com/docs/4.0/examples/starter-template/">


<style type="text/css" id="dark-mode-custom-style"></style>

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">
  <link rel="icon" href="https://getbootstrap.com/docs/4.0/assets/img/favicons/favicon.ico">

  <title>I Blue It</title>

  <link rel="stylesheet" href="libs/bootstrap-4.4.1-dist/css/bootstrap.min.css">
  <script src="libs/jquery-3.4.1/jquery-3.4.1.min.js"></script>

  <script src="libs/code/highcharts.js"></script>
  <script src="libs/code/highcharts-more.js"></script>
  <script src="libs/code/modules/data.js"></script>
  <script src="libs/code/modules/dumbbell.js"></script>
  <script src="libs/code/modules/lollipop.js"></script>
  <script src="libs/code/modules/exporting.js"></script>
  <script src="libs/code/modules/export-data.js"></script>
  <script src="libs/code/modules/accessibility.js"></script>

  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/js/tempusdominus-bootstrap-4.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/css/tempusdominus-bootstrap-4.min.css" />
 <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.css" />
 
  

	<body>



<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>



		<script type="text/javascript">
$.ajax({
  url: "https://blueapi.azurewebsites.net/api/pacients/5eb48243ca979a1f907f9fa1/minigames",
  type: "GET",
  dataType: "json",
  headers: {
    "GameToken": "e2cfa72e-7fc3-4f45-aa6f-2d904299d6cf"
  },
  success: function (data) {

            var DataUTC = data.data.map(x => x.created_at);
            var Dataparse= [DataUTC.length];

            var objValues = {
      maiores: [],
      medios: [],
      menores: []
    }

    var values = data.data.map(function (value) {
      var flowValues = value.flowDataRounds.map(x => x.roundFlowScore).sort(function (a, b) {return a - b; });
      objValues.maiores.push(flowValues[2]);
      objValues.medios.push(flowValues[1]);
      objValues.menores.push(flowValues[0]);
    });
            var VR = [DataUTC.length];

            for(i=0;i<DataUTC.length;i++){
                Dataparse[i] = Date.parse(DataUTC[i])     
                }
            console.log(Dataparse);

            VR = objValues.medios ;  
            var data = [DataUTC.length];
            for(i=0;i<DataUTC.length;i++){
                data[i] = [Dataparse[i],VR[i]]; 
                }
            

        Highcharts.chart('container', {
            chart: {
                zoomType: 'x'
            },
            title: {
                text: 'USD to EUR exchange rate over time'
            },
            subtitle: {
                text: document.ontouchstart === undefined ?
                    'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'
            },
            xAxis: {
                type: 'datetime'
            },
            yAxis: {
                title: {
                    text: 'Exchange rate'
                }
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                area: {
                    fillColor: {
                        linearGradient: {
                            x1: 0,
                            y1: 0,
                            x2: 0,
                            y2: 0
                        },
                        stops: [
                            [0, Highcharts.getOptions().colors[0]],
                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
                        ]
                    },
                    marker: {
                        radius: 3
                    },
                    lineWidth: 0.5,
                    states: {
                        hover: {
                            lineWidth: 0.5
                        }
                    },
                    threshold: null
                }   
            },

            series: [{
                type: 'area',
                name: 'USD to EUR',
                data: data,
                marker: {
                        radius: 3
                    },
            }]
        });
    }
});
		</script>
	</body>
</html>
